State 144 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 primary_expression: IDENTIFIER
    2                   | CONSTANT
    3                   | '(' expression ')'

    4 postfix_expression: primary_expression
    5                   | postfix_expression '(' ')'
    6                   | postfix_expression '(' argument_expression_list ')'
    7                   | postfix_expression '.' IDENTIFIER
    8                   | postfix_expression PTR_OP IDENTIFIER

    9 argument_expression_list: expression
   10                         | argument_expression_list ',' expression

   11 unary_expression: postfix_expression
   12                 | unary_operator unary_expression
   13                 | SIZEOF unary_expression

   14 unary_operator: '&'
   15               | '*'
   16               | '-'

   17 multiplicative_expression: unary_expression
   18                          | multiplicative_expression '*' unary_expression
   19                          | multiplicative_expression '/' unary_expression

   20 additive_expression: multiplicative_expression
   21                    | additive_expression '+' multiplicative_expression
   22                    | additive_expression '-' multiplicative_expression

   23 relational_expression: additive_expression
   24                      | relational_expression '<' additive_expression
   25                      | relational_expression '>' additive_expression
   26                      | relational_expression LE_OP additive_expression
   27                      | relational_expression GE_OP additive_expression

   28 equality_expression: relational_expression
   29                    | equality_expression EQ_OP relational_expression
   30                    | equality_expression NE_OP relational_expression

   31 logical_and_expression: equality_expression
   32                       | logical_and_expression AND_OP equality_expression

   33 logical_or_expression: logical_and_expression
   34                      | logical_or_expression OR_OP logical_and_expression

   35 expression: logical_or_expression
   36           | unary_expression '=' expression

   37 declaration: declaration_specifiers declarator ';'
   38            | struct_specifier ';'

   39 declaration_specifiers: EXTERN type_specifier
   40                       | type_specifier

   41 type_specifier: VOID
   42               | INT
   43               | struct_specifier

   44 struct_specifier: STRUCT IDENTIFIER '{' struct_declaration_list '}'
   45                 | STRUCT '{' struct_declaration_list '}'
   46                 | STRUCT IDENTIFIER

   47 struct_declaration_list: struct_declaration
   48                        | struct_declaration_list struct_declaration

   49 struct_declaration: type_specifier declarator ';'

   50 declarator: '*' direct_declarator
   51           | direct_declarator

   52 direct_declarator: IDENTIFIER
   53                  | '(' declarator ')'
   54                  | direct_declarator '(' parameter_list ')'
   55                  | direct_declarator '(' ')'

   56 parameter_list: parameter_declaration
   57               | parameter_list ',' parameter_declaration

   58 parameter_declaration: declaration_specifiers declarator

   59 statement: compound_statement
   60          | expression_statement
   61          | selection_statement
   62          | iteration_statement
   63          | jump_statement

   64 compound_statement: '{' '}'
   65                   | '{' statement_list '}'
   66                   | '{' declaration_list '}'
   67                   | '{' declaration_list statement_list '}'

   68 declaration_list: declaration
   69                 | declaration_list declaration

   70 statement_list: statement
   71               | statement_list statement

   72 expression_statement: ';'
   73                     | expression ';'

   74 selection_statement: IF '(' expression ')' statement
   75                    | IF '(' expression ')' statement ELSE statement

   76 iteration_statement: WHILE '(' expression ')' statement
   77                    | FOR '(' expression_statement expression_statement expression ')' statement

   78 jump_statement: RETURN ';'
   79               | RETURN expression ';'

   80 program: external_declaration
   81        | program external_declaration

   82 external_declaration: function_definition
   83                     | declaration

   84 function_definition: declaration_specifiers declarator compound_statement


Terminals, with rules where they appear

$end (0) 0
'&' (38) 14
'(' (40) 3 5 6 53 54 55 74 75 76 77
')' (41) 3 5 6 53 54 55 74 75 76 77
'*' (42) 15 18 50
'+' (43) 21
',' (44) 10 57
'-' (45) 16 22
'.' (46) 7
'/' (47) 19
';' (59) 37 38 49 72 73 78 79
'<' (60) 24
'=' (61) 36
'>' (62) 25
'{' (123) 44 45 64 65 66 67
'}' (125) 44 45 64 65 66 67
error (256)
IDENTIFIER (258) 1 7 8 44 46 52
CONSTANT (259) 2
SIZEOF (260) 13
PTR_OP (261) 8
LE_OP (262) 26
GE_OP (263) 27
EQ_OP (264) 29
NE_OP (265) 30
AND_OP (266) 32
OR_OP (267) 34
EXTERN (268) 39
INT (269) 42
VOID (270) 41
STRUCT (271) 44 45 46
IF (272) 74 75
ELSE (273) 75
WHILE (274) 76
FOR (275) 77
RETURN (276) 78 79


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
primary_expression (38)
    on left: 1 2 3, on right: 4
postfix_expression (39)
    on left: 4 5 6 7 8, on right: 5 6 7 8 11
argument_expression_list (40)
    on left: 9 10, on right: 6 10
unary_expression (41)
    on left: 11 12 13, on right: 12 13 17 18 19 36
unary_operator (42)
    on left: 14 15 16, on right: 12
multiplicative_expression (43)
    on left: 17 18 19, on right: 18 19 20 21 22
additive_expression (44)
    on left: 20 21 22, on right: 21 22 23 24 25 26 27
relational_expression (45)
    on left: 23 24 25 26 27, on right: 24 25 26 27 28 29 30
equality_expression (46)
    on left: 28 29 30, on right: 29 30 31 32
logical_and_expression (47)
    on left: 31 32, on right: 32 33 34
logical_or_expression (48)
    on left: 33 34, on right: 34 35
expression (49)
    on left: 35 36, on right: 3 9 10 36 73 74 75 76 77 79
declaration (50)
    on left: 37 38, on right: 68 69 83
declaration_specifiers (51)
    on left: 39 40, on right: 37 58 84
type_specifier (52)
    on left: 41 42 43, on right: 39 40 49
struct_specifier (53)
    on left: 44 45 46, on right: 38 43
struct_declaration_list (54)
    on left: 47 48, on right: 44 45 48
struct_declaration (55)
    on left: 49, on right: 47 48
declarator (56)
    on left: 50 51, on right: 37 49 53 58 84
direct_declarator (57)
    on left: 52 53 54 55, on right: 50 51 54 55
parameter_list (58)
    on left: 56 57, on right: 54 57
parameter_declaration (59)
    on left: 58, on right: 56 57
statement (60)
    on left: 59 60 61 62 63, on right: 70 71 74 75 76 77
compound_statement (61)
    on left: 64 65 66 67, on right: 59 84
declaration_list (62)
    on left: 68 69, on right: 66 67 69
statement_list (63)
    on left: 70 71, on right: 65 67 71
expression_statement (64)
    on left: 72 73, on right: 60 77
selection_statement (65)
    on left: 74 75, on right: 61
iteration_statement (66)
    on left: 76 77, on right: 62
jump_statement (67)
    on left: 78 79, on right: 63
program (68)
    on left: 80 81, on right: 0 81
external_declaration (69)
    on left: 82 83, on right: 80 81
function_definition (70)
    on left: 84, on right: 82


state 0

    0 $accept: . program $end

    EXTERN  shift, and go to state 1
    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    STRUCT  shift, and go to state 4

    declaration             go to state 5
    declaration_specifiers  go to state 6
    type_specifier          go to state 7
    struct_specifier        go to state 8
    program                 go to state 9
    external_declaration    go to state 10
    function_definition     go to state 11


state 1

   39 declaration_specifiers: EXTERN . type_specifier

    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    STRUCT  shift, and go to state 4

    type_specifier    go to state 12
    struct_specifier  go to state 13


state 2

   42 type_specifier: INT .

    $default  reduce using rule 42 (type_specifier)


state 3

   41 type_specifier: VOID .

    $default  reduce using rule 41 (type_specifier)


state 4

   44 struct_specifier: STRUCT . IDENTIFIER '{' struct_declaration_list '}'
   45                 | STRUCT . '{' struct_declaration_list '}'
   46                 | STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 14
    '{'         shift, and go to state 15


state 5

   83 external_declaration: declaration .

    $default  reduce using rule 83 (external_declaration)


state 6

   37 declaration: declaration_specifiers . declarator ';'
   84 function_definition: declaration_specifiers . declarator compound_statement

    IDENTIFIER  shift, and go to state 16
    '('         shift, and go to state 17
    '*'         shift, and go to state 18

    declarator         go to state 19
    direct_declarator  go to state 20


state 7

   40 declaration_specifiers: type_specifier .

    $default  reduce using rule 40 (declaration_specifiers)


state 8

   38 declaration: struct_specifier . ';'
   43 type_specifier: struct_specifier .

    ';'  shift, and go to state 21

    $default  reduce using rule 43 (type_specifier)


state 9

    0 $accept: program . $end
   81 program: program . external_declaration

    $end    shift, and go to state 22
    EXTERN  shift, and go to state 1
    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    STRUCT  shift, and go to state 4

    declaration             go to state 5
    declaration_specifiers  go to state 6
    type_specifier          go to state 7
    struct_specifier        go to state 8
    external_declaration    go to state 23
    function_definition     go to state 11


state 10

   80 program: external_declaration .

    $default  reduce using rule 80 (program)


state 11

   82 external_declaration: function_definition .

    $default  reduce using rule 82 (external_declaration)


state 12

   39 declaration_specifiers: EXTERN type_specifier .

    $default  reduce using rule 39 (declaration_specifiers)


state 13

   43 type_specifier: struct_specifier .

    $default  reduce using rule 43 (type_specifier)


state 14

   44 struct_specifier: STRUCT IDENTIFIER . '{' struct_declaration_list '}'
   46                 | STRUCT IDENTIFIER .

    '{'  shift, and go to state 24

    $default  reduce using rule 46 (struct_specifier)


state 15

   45 struct_specifier: STRUCT '{' . struct_declaration_list '}'

    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    STRUCT  shift, and go to state 4

    type_specifier           go to state 25
    struct_specifier         go to state 13
    struct_declaration_list  go to state 26
    struct_declaration       go to state 27


state 16

   52 direct_declarator: IDENTIFIER .

    $default  reduce using rule 52 (direct_declarator)


state 17

   53 direct_declarator: '(' . declarator ')'

    IDENTIFIER  shift, and go to state 16
    '('         shift, and go to state 17
    '*'         shift, and go to state 18

    declarator         go to state 28
    direct_declarator  go to state 20


state 18

   50 declarator: '*' . direct_declarator

    IDENTIFIER  shift, and go to state 16
    '('         shift, and go to state 17

    direct_declarator  go to state 29


state 19

   37 declaration: declaration_specifiers declarator . ';'
   84 function_definition: declaration_specifiers declarator . compound_statement

    ';'  shift, and go to state 30
    '{'  shift, and go to state 31

    compound_statement  go to state 32


state 20

   51 declarator: direct_declarator .
   54 direct_declarator: direct_declarator . '(' parameter_list ')'
   55                  | direct_declarator . '(' ')'

    '('  shift, and go to state 33

    $default  reduce using rule 51 (declarator)


state 21

   38 declaration: struct_specifier ';' .

    $default  reduce using rule 38 (declaration)


state 22

    0 $accept: program $end .

    $default  accept


state 23

   81 program: program external_declaration .

    $default  reduce using rule 81 (program)


state 24

   44 struct_specifier: STRUCT IDENTIFIER '{' . struct_declaration_list '}'

    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    STRUCT  shift, and go to state 4

    type_specifier           go to state 25
    struct_specifier         go to state 13
    struct_declaration_list  go to state 34
    struct_declaration       go to state 27


state 25

   49 struct_declaration: type_specifier . declarator ';'

    IDENTIFIER  shift, and go to state 16
    '('         shift, and go to state 17
    '*'         shift, and go to state 18

    declarator         go to state 35
    direct_declarator  go to state 20


state 26

   45 struct_specifier: STRUCT '{' struct_declaration_list . '}'
   48 struct_declaration_list: struct_declaration_list . struct_declaration

    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    STRUCT  shift, and go to state 4
    '}'     shift, and go to state 36

    type_specifier      go to state 25
    struct_specifier    go to state 13
    struct_declaration  go to state 37


state 27

   47 struct_declaration_list: struct_declaration .

    $default  reduce using rule 47 (struct_declaration_list)


state 28

   53 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 38


state 29

   50 declarator: '*' direct_declarator .
   54 direct_declarator: direct_declarator . '(' parameter_list ')'
   55                  | direct_declarator . '(' ')'

    '('  shift, and go to state 33

    $default  reduce using rule 50 (declarator)


state 30

   37 declaration: declaration_specifiers declarator ';' .

    $default  reduce using rule 37 (declaration)


state 31

   64 compound_statement: '{' . '}'
   65                   | '{' . statement_list '}'
   66                   | '{' . declaration_list '}'
   67                   | '{' . declaration_list statement_list '}'

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    EXTERN      shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    STRUCT      shift, and go to state 4
    IF          shift, and go to state 42
    WHILE       shift, and go to state 43
    FOR         shift, and go to state 44
    RETURN      shift, and go to state 45
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49
    ';'         shift, and go to state 50
    '{'         shift, and go to state 31
    '}'         shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    expression                 go to state 62
    declaration                go to state 63
    declaration_specifiers     go to state 64
    type_specifier             go to state 7
    struct_specifier           go to state 8
    statement                  go to state 65
    compound_statement         go to state 66
    declaration_list           go to state 67
    statement_list             go to state 68
    expression_statement       go to state 69
    selection_statement        go to state 70
    iteration_statement        go to state 71
    jump_statement             go to state 72


state 32

   84 function_definition: declaration_specifiers declarator compound_statement .

    $default  reduce using rule 84 (function_definition)


state 33

   54 direct_declarator: direct_declarator '(' . parameter_list ')'
   55                  | direct_declarator '(' . ')'

    EXTERN  shift, and go to state 1
    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    STRUCT  shift, and go to state 4
    ')'     shift, and go to state 73

    declaration_specifiers  go to state 74
    type_specifier          go to state 7
    struct_specifier        go to state 13
    parameter_list          go to state 75
    parameter_declaration   go to state 76


state 34

   44 struct_specifier: STRUCT IDENTIFIER '{' struct_declaration_list . '}'
   48 struct_declaration_list: struct_declaration_list . struct_declaration

    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    STRUCT  shift, and go to state 4
    '}'     shift, and go to state 77

    type_specifier      go to state 25
    struct_specifier    go to state 13
    struct_declaration  go to state 37


state 35

   49 struct_declaration: type_specifier declarator . ';'

    ';'  shift, and go to state 78


state 36

   45 struct_specifier: STRUCT '{' struct_declaration_list '}' .

    $default  reduce using rule 45 (struct_specifier)


state 37

   48 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 48 (struct_declaration_list)


state 38

   53 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 53 (direct_declarator)


state 39

    1 primary_expression: IDENTIFIER .

    $default  reduce using rule 1 (primary_expression)


state 40

    2 primary_expression: CONSTANT .

    $default  reduce using rule 2 (primary_expression)


state 41

   13 unary_expression: SIZEOF . unary_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression  go to state 52
    postfix_expression  go to state 53
    unary_expression    go to state 79
    unary_operator      go to state 55


state 42

   74 selection_statement: IF . '(' expression ')' statement
   75                    | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 80


state 43

   76 iteration_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 81


state 44

   77 iteration_statement: FOR . '(' expression_statement expression_statement expression ')' statement

    '('  shift, and go to state 82


state 45

   78 jump_statement: RETURN . ';'
   79               | RETURN . expression ';'

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49
    ';'         shift, and go to state 83

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    expression                 go to state 84


state 46

    3 primary_expression: '(' . expression ')'

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    expression                 go to state 85


state 47

   14 unary_operator: '&' .

    $default  reduce using rule 14 (unary_operator)


state 48

   15 unary_operator: '*' .

    $default  reduce using rule 15 (unary_operator)


state 49

   16 unary_operator: '-' .

    $default  reduce using rule 16 (unary_operator)


state 50

   72 expression_statement: ';' .

    $default  reduce using rule 72 (expression_statement)


state 51

   64 compound_statement: '{' '}' .

    $default  reduce using rule 64 (compound_statement)


state 52

    4 postfix_expression: primary_expression .

    $default  reduce using rule 4 (postfix_expression)


state 53

    5 postfix_expression: postfix_expression . '(' ')'
    6                   | postfix_expression . '(' argument_expression_list ')'
    7                   | postfix_expression . '.' IDENTIFIER
    8                   | postfix_expression . PTR_OP IDENTIFIER
   11 unary_expression: postfix_expression .

    PTR_OP  shift, and go to state 86
    '('     shift, and go to state 87
    '.'     shift, and go to state 88

    $default  reduce using rule 11 (unary_expression)


state 54

   17 multiplicative_expression: unary_expression .
   36 expression: unary_expression . '=' expression

    '='  shift, and go to state 89

    $default  reduce using rule 17 (multiplicative_expression)


state 55

   12 unary_expression: unary_operator . unary_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression  go to state 52
    postfix_expression  go to state 53
    unary_expression    go to state 90
    unary_operator      go to state 55


state 56

   18 multiplicative_expression: multiplicative_expression . '*' unary_expression
   19                          | multiplicative_expression . '/' unary_expression
   20 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 20 (additive_expression)


state 57

   21 additive_expression: additive_expression . '+' multiplicative_expression
   22                    | additive_expression . '-' multiplicative_expression
   23 relational_expression: additive_expression .

    '-'  shift, and go to state 93
    '+'  shift, and go to state 94

    $default  reduce using rule 23 (relational_expression)


state 58

   24 relational_expression: relational_expression . '<' additive_expression
   25                      | relational_expression . '>' additive_expression
   26                      | relational_expression . LE_OP additive_expression
   27                      | relational_expression . GE_OP additive_expression
   28 equality_expression: relational_expression .

    LE_OP  shift, and go to state 95
    GE_OP  shift, and go to state 96
    '<'    shift, and go to state 97
    '>'    shift, and go to state 98

    $default  reduce using rule 28 (equality_expression)


state 59

   29 equality_expression: equality_expression . EQ_OP relational_expression
   30                    | equality_expression . NE_OP relational_expression
   31 logical_and_expression: equality_expression .

    EQ_OP  shift, and go to state 99
    NE_OP  shift, and go to state 100

    $default  reduce using rule 31 (logical_and_expression)


state 60

   32 logical_and_expression: logical_and_expression . AND_OP equality_expression
   33 logical_or_expression: logical_and_expression .

    AND_OP  shift, and go to state 101

    $default  reduce using rule 33 (logical_or_expression)


state 61

   34 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
   35 expression: logical_or_expression .

    OR_OP  shift, and go to state 102

    $default  reduce using rule 35 (expression)


state 62

   73 expression_statement: expression . ';'

    ';'  shift, and go to state 103


state 63

   68 declaration_list: declaration .

    $default  reduce using rule 68 (declaration_list)


state 64

   37 declaration: declaration_specifiers . declarator ';'

    IDENTIFIER  shift, and go to state 16
    '('         shift, and go to state 17
    '*'         shift, and go to state 18

    declarator         go to state 104
    direct_declarator  go to state 20


state 65

   70 statement_list: statement .

    $default  reduce using rule 70 (statement_list)


state 66

   59 statement: compound_statement .

    $default  reduce using rule 59 (statement)


state 67

   66 compound_statement: '{' declaration_list . '}'
   67                   | '{' declaration_list . statement_list '}'
   69 declaration_list: declaration_list . declaration

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    EXTERN      shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    STRUCT      shift, and go to state 4
    IF          shift, and go to state 42
    WHILE       shift, and go to state 43
    FOR         shift, and go to state 44
    RETURN      shift, and go to state 45
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49
    ';'         shift, and go to state 50
    '{'         shift, and go to state 31
    '}'         shift, and go to state 105

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    expression                 go to state 62
    declaration                go to state 106
    declaration_specifiers     go to state 64
    type_specifier             go to state 7
    struct_specifier           go to state 8
    statement                  go to state 65
    compound_statement         go to state 66
    statement_list             go to state 107
    expression_statement       go to state 69
    selection_statement        go to state 70
    iteration_statement        go to state 71
    jump_statement             go to state 72


state 68

   65 compound_statement: '{' statement_list . '}'
   71 statement_list: statement_list . statement

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    IF          shift, and go to state 42
    WHILE       shift, and go to state 43
    FOR         shift, and go to state 44
    RETURN      shift, and go to state 45
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49
    ';'         shift, and go to state 50
    '{'         shift, and go to state 31
    '}'         shift, and go to state 108

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    expression                 go to state 62
    statement                  go to state 109
    compound_statement         go to state 66
    expression_statement       go to state 69
    selection_statement        go to state 70
    iteration_statement        go to state 71
    jump_statement             go to state 72


state 69

   60 statement: expression_statement .

    $default  reduce using rule 60 (statement)


state 70

   61 statement: selection_statement .

    $default  reduce using rule 61 (statement)


state 71

   62 statement: iteration_statement .

    $default  reduce using rule 62 (statement)


state 72

   63 statement: jump_statement .

    $default  reduce using rule 63 (statement)


state 73

   55 direct_declarator: direct_declarator '(' ')' .

    $default  reduce using rule 55 (direct_declarator)


state 74

   58 parameter_declaration: declaration_specifiers . declarator

    IDENTIFIER  shift, and go to state 16
    '('         shift, and go to state 17
    '*'         shift, and go to state 18

    declarator         go to state 110
    direct_declarator  go to state 20


state 75

   54 direct_declarator: direct_declarator '(' parameter_list . ')'
   57 parameter_list: parameter_list . ',' parameter_declaration

    ')'  shift, and go to state 111
    ','  shift, and go to state 112


state 76

   56 parameter_list: parameter_declaration .

    $default  reduce using rule 56 (parameter_list)


state 77

   44 struct_specifier: STRUCT IDENTIFIER '{' struct_declaration_list '}' .

    $default  reduce using rule 44 (struct_specifier)


state 78

   49 struct_declaration: type_specifier declarator ';' .

    $default  reduce using rule 49 (struct_declaration)


state 79

   13 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 13 (unary_expression)


state 80

   74 selection_statement: IF '(' . expression ')' statement
   75                    | IF '(' . expression ')' statement ELSE statement

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    expression                 go to state 113


state 81

   76 iteration_statement: WHILE '(' . expression ')' statement

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    expression                 go to state 114


state 82

   77 iteration_statement: FOR '(' . expression_statement expression_statement expression ')' statement

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49
    ';'         shift, and go to state 50

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    expression                 go to state 62
    expression_statement       go to state 115


state 83

   78 jump_statement: RETURN ';' .

    $default  reduce using rule 78 (jump_statement)


state 84

   79 jump_statement: RETURN expression . ';'

    ';'  shift, and go to state 116


state 85

    3 primary_expression: '(' expression . ')'

    ')'  shift, and go to state 117


state 86

    8 postfix_expression: postfix_expression PTR_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 118


state 87

    5 postfix_expression: postfix_expression '(' . ')'
    6                   | postfix_expression '(' . argument_expression_list ')'

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    ')'         shift, and go to state 119
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    argument_expression_list   go to state 120
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    expression                 go to state 121


state 88

    7 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 122


state 89

   36 expression: unary_expression '=' . expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    expression                 go to state 123


state 90

   12 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 12 (unary_expression)


state 91

   18 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression  go to state 52
    postfix_expression  go to state 53
    unary_expression    go to state 124
    unary_operator      go to state 55


state 92

   19 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression  go to state 52
    postfix_expression  go to state 53
    unary_expression    go to state 125
    unary_operator      go to state 55


state 93

   22 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 126
    unary_operator             go to state 55
    multiplicative_expression  go to state 127


state 94

   21 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 126
    unary_operator             go to state 55
    multiplicative_expression  go to state 128


state 95

   26 relational_expression: relational_expression LE_OP . additive_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 126
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 129


state 96

   27 relational_expression: relational_expression GE_OP . additive_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 126
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 130


state 97

   24 relational_expression: relational_expression '<' . additive_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 126
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 131


state 98

   25 relational_expression: relational_expression '>' . additive_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 126
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 132


state 99

   29 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 126
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 133


state 100

   30 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 126
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 134


state 101

   32 logical_and_expression: logical_and_expression AND_OP . equality_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 126
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 135


state 102

   34 logical_or_expression: logical_or_expression OR_OP . logical_and_expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 126
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 136


state 103

   73 expression_statement: expression ';' .

    $default  reduce using rule 73 (expression_statement)


state 104

   37 declaration: declaration_specifiers declarator . ';'

    ';'  shift, and go to state 30


state 105

   66 compound_statement: '{' declaration_list '}' .

    $default  reduce using rule 66 (compound_statement)


state 106

   69 declaration_list: declaration_list declaration .

    $default  reduce using rule 69 (declaration_list)


state 107

   67 compound_statement: '{' declaration_list statement_list . '}'
   71 statement_list: statement_list . statement

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    IF          shift, and go to state 42
    WHILE       shift, and go to state 43
    FOR         shift, and go to state 44
    RETURN      shift, and go to state 45
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49
    ';'         shift, and go to state 50
    '{'         shift, and go to state 31
    '}'         shift, and go to state 137

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    expression                 go to state 62
    statement                  go to state 109
    compound_statement         go to state 66
    expression_statement       go to state 69
    selection_statement        go to state 70
    iteration_statement        go to state 71
    jump_statement             go to state 72


state 108

   65 compound_statement: '{' statement_list '}' .

    $default  reduce using rule 65 (compound_statement)


state 109

   71 statement_list: statement_list statement .

    $default  reduce using rule 71 (statement_list)


state 110

   58 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 58 (parameter_declaration)


state 111

   54 direct_declarator: direct_declarator '(' parameter_list ')' .

    $default  reduce using rule 54 (direct_declarator)


state 112

   57 parameter_list: parameter_list ',' . parameter_declaration

    EXTERN  shift, and go to state 1
    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    STRUCT  shift, and go to state 4

    declaration_specifiers  go to state 74
    type_specifier          go to state 7
    struct_specifier        go to state 13
    parameter_declaration   go to state 138


state 113

   74 selection_statement: IF '(' expression . ')' statement
   75                    | IF '(' expression . ')' statement ELSE statement

    ')'  shift, and go to state 139


state 114

   76 iteration_statement: WHILE '(' expression . ')' statement

    ')'  shift, and go to state 140


state 115

   77 iteration_statement: FOR '(' expression_statement . expression_statement expression ')' statement

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49
    ';'         shift, and go to state 50

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    expression                 go to state 62
    expression_statement       go to state 141


state 116

   79 jump_statement: RETURN expression ';' .

    $default  reduce using rule 79 (jump_statement)


state 117

    3 primary_expression: '(' expression ')' .

    $default  reduce using rule 3 (primary_expression)


state 118

    8 postfix_expression: postfix_expression PTR_OP IDENTIFIER .

    $default  reduce using rule 8 (postfix_expression)


state 119

    5 postfix_expression: postfix_expression '(' ')' .

    $default  reduce using rule 5 (postfix_expression)


state 120

    6 postfix_expression: postfix_expression '(' argument_expression_list . ')'
   10 argument_expression_list: argument_expression_list . ',' expression

    ')'  shift, and go to state 142
    ','  shift, and go to state 143


state 121

    9 argument_expression_list: expression .

    $default  reduce using rule 9 (argument_expression_list)


state 122

    7 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 7 (postfix_expression)


state 123

   36 expression: unary_expression '=' expression .

    $default  reduce using rule 36 (expression)


state 124

   18 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 18 (multiplicative_expression)


state 125

   19 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 19 (multiplicative_expression)


state 126

   17 multiplicative_expression: unary_expression .

    $default  reduce using rule 17 (multiplicative_expression)


state 127

   18 multiplicative_expression: multiplicative_expression . '*' unary_expression
   19                          | multiplicative_expression . '/' unary_expression
   22 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 22 (additive_expression)


state 128

   18 multiplicative_expression: multiplicative_expression . '*' unary_expression
   19                          | multiplicative_expression . '/' unary_expression
   21 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 21 (additive_expression)


state 129

   21 additive_expression: additive_expression . '+' multiplicative_expression
   22                    | additive_expression . '-' multiplicative_expression
   26 relational_expression: relational_expression LE_OP additive_expression .

    '-'  shift, and go to state 93
    '+'  shift, and go to state 94

    $default  reduce using rule 26 (relational_expression)


state 130

   21 additive_expression: additive_expression . '+' multiplicative_expression
   22                    | additive_expression . '-' multiplicative_expression
   27 relational_expression: relational_expression GE_OP additive_expression .

    '-'  shift, and go to state 93
    '+'  shift, and go to state 94

    $default  reduce using rule 27 (relational_expression)


state 131

   21 additive_expression: additive_expression . '+' multiplicative_expression
   22                    | additive_expression . '-' multiplicative_expression
   24 relational_expression: relational_expression '<' additive_expression .

    '-'  shift, and go to state 93
    '+'  shift, and go to state 94

    $default  reduce using rule 24 (relational_expression)


state 132

   21 additive_expression: additive_expression . '+' multiplicative_expression
   22                    | additive_expression . '-' multiplicative_expression
   25 relational_expression: relational_expression '>' additive_expression .

    '-'  shift, and go to state 93
    '+'  shift, and go to state 94

    $default  reduce using rule 25 (relational_expression)


state 133

   24 relational_expression: relational_expression . '<' additive_expression
   25                      | relational_expression . '>' additive_expression
   26                      | relational_expression . LE_OP additive_expression
   27                      | relational_expression . GE_OP additive_expression
   29 equality_expression: equality_expression EQ_OP relational_expression .

    LE_OP  shift, and go to state 95
    GE_OP  shift, and go to state 96
    '<'    shift, and go to state 97
    '>'    shift, and go to state 98

    $default  reduce using rule 29 (equality_expression)


state 134

   24 relational_expression: relational_expression . '<' additive_expression
   25                      | relational_expression . '>' additive_expression
   26                      | relational_expression . LE_OP additive_expression
   27                      | relational_expression . GE_OP additive_expression
   30 equality_expression: equality_expression NE_OP relational_expression .

    LE_OP  shift, and go to state 95
    GE_OP  shift, and go to state 96
    '<'    shift, and go to state 97
    '>'    shift, and go to state 98

    $default  reduce using rule 30 (equality_expression)


state 135

   29 equality_expression: equality_expression . EQ_OP relational_expression
   30                    | equality_expression . NE_OP relational_expression
   32 logical_and_expression: logical_and_expression AND_OP equality_expression .

    EQ_OP  shift, and go to state 99
    NE_OP  shift, and go to state 100

    $default  reduce using rule 32 (logical_and_expression)


state 136

   32 logical_and_expression: logical_and_expression . AND_OP equality_expression
   34 logical_or_expression: logical_or_expression OR_OP logical_and_expression .

    AND_OP  shift, and go to state 101

    $default  reduce using rule 34 (logical_or_expression)


state 137

   67 compound_statement: '{' declaration_list statement_list '}' .

    $default  reduce using rule 67 (compound_statement)


state 138

   57 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 57 (parameter_list)


state 139

   74 selection_statement: IF '(' expression ')' . statement
   75                    | IF '(' expression ')' . statement ELSE statement

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    IF          shift, and go to state 42
    WHILE       shift, and go to state 43
    FOR         shift, and go to state 44
    RETURN      shift, and go to state 45
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49
    ';'         shift, and go to state 50
    '{'         shift, and go to state 31

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    expression                 go to state 62
    statement                  go to state 144
    compound_statement         go to state 66
    expression_statement       go to state 69
    selection_statement        go to state 70
    iteration_statement        go to state 71
    jump_statement             go to state 72


state 140

   76 iteration_statement: WHILE '(' expression ')' . statement

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    IF          shift, and go to state 42
    WHILE       shift, and go to state 43
    FOR         shift, and go to state 44
    RETURN      shift, and go to state 45
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49
    ';'         shift, and go to state 50
    '{'         shift, and go to state 31

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    expression                 go to state 62
    statement                  go to state 145
    compound_statement         go to state 66
    expression_statement       go to state 69
    selection_statement        go to state 70
    iteration_statement        go to state 71
    jump_statement             go to state 72


state 141

   77 iteration_statement: FOR '(' expression_statement expression_statement . expression ')' statement

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    expression                 go to state 146


state 142

    6 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $default  reduce using rule 6 (postfix_expression)


state 143

   10 argument_expression_list: argument_expression_list ',' . expression

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    expression                 go to state 147


state 144

   74 selection_statement: IF '(' expression ')' statement .
   75                    | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 148

    ELSE      [reduce using rule 74 (selection_statement)]
    $default  reduce using rule 74 (selection_statement)


state 145

   76 iteration_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 76 (iteration_statement)


state 146

   77 iteration_statement: FOR '(' expression_statement expression_statement expression . ')' statement

    ')'  shift, and go to state 149


state 147

   10 argument_expression_list: argument_expression_list ',' expression .

    $default  reduce using rule 10 (argument_expression_list)


state 148

   75 selection_statement: IF '(' expression ')' statement ELSE . statement

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    IF          shift, and go to state 42
    WHILE       shift, and go to state 43
    FOR         shift, and go to state 44
    RETURN      shift, and go to state 45
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49
    ';'         shift, and go to state 50
    '{'         shift, and go to state 31

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    expression                 go to state 62
    statement                  go to state 150
    compound_statement         go to state 66
    expression_statement       go to state 69
    selection_statement        go to state 70
    iteration_statement        go to state 71
    jump_statement             go to state 72


state 149

   77 iteration_statement: FOR '(' expression_statement expression_statement expression ')' . statement

    IDENTIFIER  shift, and go to state 39
    CONSTANT    shift, and go to state 40
    SIZEOF      shift, and go to state 41
    IF          shift, and go to state 42
    WHILE       shift, and go to state 43
    FOR         shift, and go to state 44
    RETURN      shift, and go to state 45
    '('         shift, and go to state 46
    '&'         shift, and go to state 47
    '*'         shift, and go to state 48
    '-'         shift, and go to state 49
    ';'         shift, and go to state 50
    '{'         shift, and go to state 31

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    multiplicative_expression  go to state 56
    additive_expression        go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    logical_and_expression     go to state 60
    logical_or_expression      go to state 61
    expression                 go to state 62
    statement                  go to state 151
    compound_statement         go to state 66
    expression_statement       go to state 69
    selection_statement        go to state 70
    iteration_statement        go to state 71
    jump_statement             go to state 72


state 150

   75 selection_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 75 (selection_statement)


state 151

   77 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement .

    $default  reduce using rule 77 (iteration_statement)
